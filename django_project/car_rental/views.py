from django.shortcuts import render, redirect, reverse
from .forms import ReservationForm
from .models import Car, Reservation, Booking
import datetime
import pandas as pd
today = datetime.date.today()

# Create your views here.
def index_view(request, *args, **kwargs):
    reservation = Reservation()
    if request.method != 'POST':
        form = ReservationForm()
    else:
        form = ReservationForm(data=request.POST)
        form.reservation_from = today
        if form.is_valid():
            reservation.reservation_from = form.cleaned_data['reservation_from']
            reservation.reservation_to = form.cleaned_data['reservation_to']
            reservation.save()
            return redirect('car_rental:available_cars', reservation_id=reservation.id)
    template = 'index.html'
    # reservation_id = reservation.id
    context = {}
    context['form'] = form
    return render(request, template, context)


def available_cars_view(request, reservation_id):
    # today = datetime.date.today()
    reservation = Reservation.objects.get(id=reservation_id)
    cars = Car.objects.all()
    bookings = Booking.objects.all()
    available_cars = []
    not_available_cars = []
    booked_dates = []
    for booking in bookings:
        booked_dates = []
        # timestamps are generated by pandas.
        print(f'booking!!!!!!!!!!! {booking}')
        booked_timestamps = None
        booked_timestamps = pd.date_range(booking.booking_from, booking.booking_to).to_list()
        # converts to date format, to be comparable with datetime.date values.
        for item in booked_timestamps:
            item.date()
            booked_dates.append(item.date())
        if reservation.reservation_from in booked_dates or reservation.reservation_to in booked_dates:
            if booking.booked_car.id not in not_available_cars:
                not_available_cars.append(booking.booked_car.id)
    for car in cars:
        if car.id not in not_available_cars:
            available_cars.append(car)

    print(available_cars)
    print(not_available_cars)

    template = 'available_cars.html'
    context = {}
    context['available_cars'] = available_cars
    context['bookings'] = bookings
    context['reservation'] = reservation
    return render(request, template, context)


def car_detail(request, car_id):
    template = 'car_detail.html'
    car = Car.objects.get(id=car_id)
    context = {}
    context['car'] = car
    return render(request, template, context)


def reservation_view(request):
    template = 'reservation'
    cars = Car.objects.all()
    context = {}
    context['cars'] = cars
    return render(request, template, context)
